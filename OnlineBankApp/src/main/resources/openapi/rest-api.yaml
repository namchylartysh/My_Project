openapi: 3.0.0
info:
  version: 1.0.0
  title: Bank Rest API

tags:
  - name: BankRest
    description: Bank rest CRUD API

paths:
  /register:
    post:
      tags:
        - BankRest
      summary: Register a new user to the bank system
      description: Register a new user to the bank system
      operationId: registerUser
      requestBody:
        description: Data to register a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: New user registered successfully
          content:
            application/json:
              schema:
                $ref: '#UserVO'
        '404':
          description: Registration failed
  /login:
    post:
      tags:
        - BankRest
      summary: Logs user into the system
      description: Login of user
      operationId: loginUser
      parameters:
        - name: email
          in: query
          description: The email for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#UserVO'
        '400':
          description: Invalid email/password supplied
  /account/create_account:
    post:
      tags:
        - BankRest
      summary: Create a new account
      description: Create a new account
      operationId: createAccount
      requestBody:
        description: Data to create a new account
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Account'
        required: true
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#AccountVO'
        '404':
          description: Creation of account failed
  /account/delete_account/{id}:
    delete:
      tags:
        - BankRest
      summary: Delete an account
      description: Deleting an account
      operationId: deleteAccount
      parameters:
        - name: id
          in: path
          description: Account id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Account deleted successfully
        '404':
          description: Invalid account value
  /app/display_accounts/{id}:
    get:
      tags:
        - BankRest
      summary: View user's accounts
      description: View all accounts of user
      operationId: display_accounts
      parameters:
        - name: id
          in: path
          description: The user id whose accounts to be shown
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#AccountVO'
        '400':
          description: Invalid user id supplied
        '404':
          description: user id not found
  /app/transaction_history/{id}:
    get:
      tags:
        - BankRest
      summary: Get transaction history of user
      description: Get transaction history of user
      operationId: transaction_history
      parameters:
        - name: id
          in: path
          description: The user id which transaction history to be demonstrated
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/TransactionHistoryListResponse'
        '400':
          description: Invalid user id supplied
        '404':
          description: user id not found
  /transact/deposit:
    post:
      tags:
        - BankRest
      summary: Deposit amount to an account
      description: Deposit amount
      operationId: deposit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                depositAmount:
                  type: integer
                accountId:
                  type: integer
              required:
                - depositAmount
                - accountId
      responses:
        '200':
          description: Amount deposited successfully
        '404':
          description: Deposit failed

  /transact/transfer:
    post:
      tags:
        - BankRest
      summary: Transfer amount between accounts
      description: Transferring amount between accounts
      operationId: transfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  format: int32
                transferFrom:
                  type: string
                transferTo:
                  type: string
                transferAmount:
                  type: integer
                  format: int32
              required:
                - userId
                - transferFrom
                - transferTo
                - transferAmount
      responses:
        '200':
          description: Amount transferred successfully
        '400':
          description: Transfer failed

  /transact/withdraw:
    post:
      tags:
        - BankRest
      summary: Withdraw amount from an account
      description: Withdrawal amount from an account
      operationId: withdraw
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                withdrawalAmount:
                  type: integer
                accountId:
                  type: integer
              required:
                - withdrawalAmount
                - accountId
      responses:
        '200':
          description: Amount withdrawn successfully
        '400':
          description: Withdrawal failed
  /transact/payment:
    post:
      tags:
        - BankRest
      summary: Make a payment from an account
      description: Payment from an account
      operationId: payment
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                recipient:
                  type: string
                accountNumber:
                  type: string
                accountId:
                  type: string
                reference:
                  type: string
                paymentAmount:
                  type: integer
              required:
                - recipient
                - accountNumber
                - accountId
                - reference
                - paymentAmount
      responses:
        '200':
          description: Payment made successfully
        '400':
          description: Payment failed
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int32
          example: 1
        firstName:
          type: string
          example: Jack
        lastName:
          type: string
          example: Sparrow
        email:
          type: string
          example: user@user.net
        password:
          type: string
          example: '12345'
        role:
          type: string
          description: Role of user
          example: CLIENT
          enum:
            - CLIENT
            - ADMIN
    Account:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
          example: 1
        accountNumber:
          type: string
          example: '0001'
        accountName:
          type: string
          example: User's Cafe
        accountType:
          type: string
          example: business
        balance:
          type: number
        createdAt:
          type: string
          format: date-time
    AccountListResponse:
      type: object
      properties:
        admin:
          $ref: '#UserVO'
        user:
          $ref: '#UserVO'
        thisUserAccounts:
          type: array
          items:
            $ref: '#AccountVO'
    TransactionHistory:
      type: object
      properties:
        userId:
          type: integer
        accountId:
          type: integer
        transactionType:
          type: string
        amount:
          type: number
        createdAt:
          type: string
          format: date-time
      required:
        - accountId
        - userId
        - transactionType
        - amount
        - createdAt
    TransactionHistoryListResponse:
      type: object
      properties:
        transaction_history:
          type: array
          items:
            $ref: '#/components/schemas/TransactionHistory'